{"ast":null,"code":"var _jsxFileName = \"/home/elenasilvana/Documents/Practice/fullstack-open/part2/courseinfo/src/Total.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Total = ({\n  courseContent\n}) => {\n  const getTotal = courseContent => {\n    const totalResult = courseContent.reduce((total = 0, part) => {\n      console.log(\"total\", total, \"exercises\", part.exercises);\n      return total + part.exercises;\n    });\n    console.log(\"total result\", totalResult);\n    /* let totalSum = 0;\n    courseContent.forEach((part) => (totalSum += part.exercises));\n    return totalSum;*/\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", getTotal(courseContent)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Total;\nexport default Total;\n\nvar _c;\n\n$RefreshReg$(_c, \"Total\");","map":{"version":3,"sources":["/home/elenasilvana/Documents/Practice/fullstack-open/part2/courseinfo/src/Total.jsx"],"names":["Total","courseContent","getTotal","totalResult","reduce","total","part","console","log","exercises"],"mappings":";;;AAAA,MAAMA,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AACnC,QAAMC,QAAQ,GAAID,aAAD,IAAmB;AAClC,UAAME,WAAW,GAAGF,aAAa,CAACG,MAAd,CAAqB,CAACC,KAAK,GAAG,CAAT,EAAYC,IAAZ,KAAqB;AAC5DC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB,EAA4B,WAA5B,EAAyCC,IAAI,CAACG,SAA9C;AACA,aAAOJ,KAAK,GAAGC,IAAI,CAACG,SAApB;AACD,KAHmB,CAApB;AAIAF,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BL,WAA5B;AACA;AACJ;AACA;AACG,GATD;;AAWA,sBAAO;AAAA,uCAAwBD,QAAQ,CAACD,aAAD,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAbD;;KAAMD,K;AAeN,eAAeA,KAAf","sourcesContent":["const Total = ({ courseContent }) => {\n  const getTotal = (courseContent) => {\n    const totalResult = courseContent.reduce((total = 0, part) => {\n      console.log(\"total\", total, \"exercises\", part.exercises);\n      return total + part.exercises;\n    });\n    console.log(\"total result\", totalResult);\n    /* let totalSum = 0;\n    courseContent.forEach((part) => (totalSum += part.exercises));\n    return totalSum;*/\n  };\n\n  return <p>Number of exercises {getTotal(courseContent)}</p>;\n};\n\nexport default Total;\n"]},"metadata":{},"sourceType":"module"}